language: cpp
dist: bionic
os:
- linux
sudo: require
install:
- sudo apt-get update
- sudo apt-get install lcov
- sudo apt-get install nasm
- sudo apt-get install xorg-dev libglu1-mesa-dev mesa-common-dev
- sudo apt-get install libasound2-dev libpulse-dev
- sudo apt-get install python3.7 python3.7-dev
services:
- xvfb
branches:
  only:
  - master
addons:
  sonarcloud:
    organization: "darbyjohnston"
    token:
      secure: A62v7n5c9pqc4P5jlW6C1f3sK6anXBkxH+cVQhzGHcIDllrnAeH9gET6gaPAO5IAl9V7AZGrk3LEKAfbkqpqyTz+T17OB4cSXE+io+TTvFXpevOPma3hOv3olkpz08yMwjOvrnbFb5B+1ZQYzX8KTQby/JcHjfKSsn1duPPEEDplJEZCrPQbK5tzXLQ2jiV1s4+XJGhRna2BqrtwO+YHRtIXtzes2zDA5KWOhOS/ajrUyK+8YE5hs0bJzIrl4KZhW9iLznplUHazqOaLwil0fjXP4wj430MqWQS83iG+SHhWN9YS1krx3ScYX+6fz1L5bTHoXnrcoJ9uBIKImdyMWJNFyaafqqeB54Vroh10qAAGViw3PB2jBP2JbSZy/kTpbuZq1FAWlYvQg87RR3VJfR0vEhU+KLo+5VK7AGPulgMGSVQxEyeeobMPU84gb4WcCv5LKrhPIE+1LhSJdRFLQiag3R3No8Ge8+xLUkLHhSeAD28k0LGZQ+XJNq7sGesJu05aMOvcW/lVEiy94IrA2/vsRUIYc0BUOgpdGi3dXz4BH7A0mElmj2fg2ZBXUm2b+UKsvslxunII0rraGGJohfIPoWTsHgyilCIXO116L7anLQrptl8POax5BJMDcR+ZhGkmnh1F84AnfJEJ5QsChGDBeXuxnpyHT+QEXbwpFG4=
before_script:
- mkdir build
- cd build
- export PATH=$PATH:$PWD/DJV-install-Debug/bin
- export LD_LIBRARY_PATH=:$LD_LIBRARY_PATH/DJV-install-Debug/lib
- export PYTHONPATH=$PWD/DJV-install-Debug/lib:$PYTHONPATH
- echo "Building third party dependencies..."
- mkdir DJV-third-party-Debug
- cd DJV-third-party-Debug
- cmake ../../third-party -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../DJV-install-Debug -DDJV_THIRD_PARTY_OPTIONAL=FALSE -DDJV_PYTHON=FALSE -DDJV_OPENGL_ES2=TRUE
- cmake --build .
- cmake --install .
- cd ..
- echo "Building DJV..."
- mkdir DJV-Debug
- cd DJV-Debug
- cmake ../.. -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../DJV-install-Debug -DCMAKE_PREFIX_PATH=../DJV-install-Debug -DDJV_THIRD_PARTY_OPTIONAL=FALSE -DDJV_BUILD_TINY=TRUE -DDJV_GCOV=TRUE -DDJV_PYTHON=FALSE -DDJV_OPENGL_ES2=TRUE
# \bug https://community.sonarsource.com/t/sonarqube-c-ubuntu-build-wrapper-ld-preload-error/300/7
- export wrapperscript=`which build-wrapper-linux-x86-64`
- export wrapperdir=`dirname $wrapperscript`
- cp $wrapperdir/libinterceptor-x86_64.so $wrapperdir/libinterceptor-haswell.so
- build-wrapper-linux-x86-64 --out-dir ../bw-output cmake --build . -j 4
#- build/bin/djvTest
- make test
- cat Testing/Temporary/LastTest.log
- sh ../../etc/Util/gcov.sh ..
#- cppcheck --enable=all --xml-version=2 -I${PWD}/lib -UDJV_ASSERT -UDJV_ENDIAN_MSB -UDJV_MMAP -UDJV_OPENGL_ES2 -UDJV_PLATFORM_WINDOWS -UGLM_PRECISION_LOWP_FLOAT -UGLM_PRECISION_LOWP_INT -UGLM_PRECISION_MEDIUMP_FLOAT -UGLM_PRECISION_MEDIUMP_INT -UDJV_OPENGL_PBO -Umax -Umin lib bin examples 2> report.xml
- cd ../..
script:
- sonar-scanner

