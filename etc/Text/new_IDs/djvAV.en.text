{
    "Unknown": "error_unknown",
    "Out of memory": "error_out_of_memory",
    "Invalid value": "error_invalid_value",
    "Invalid enum": "error_invalid_enum",
    "RtAudio cannot be initialized": "error_rtaudio_init",
    "The file": "error_the_file",
    "cannot be opened": "error_openion",
    "does not have any video or audio streams": "error_no_streams",
    "does not match any video codecs": "error_codec_match",
    "The audio format": "error_the_audio_format",
    "is not supported": "error_unsupported",
    "does not match any audio codecs": "error_no_audio_codecs",
    "File not supported.": "error_file_not_supported",
    "Error reading header.": "error_reading_header",
    "cannot be read": "error_cannot_be_read",
    "cannot be written": "error_cannot_be_written",
    "Cannot parse the value.": "error_cannot_parse_value",
    "The OpenGL vertex shader cannot be created.": "error_opengl_vertex_shader_creation",
    "The OpenGL vertex shader": "error_the_opengl_vertex_shader",
    "cannot be compiled": "error_compilion",
    "The OpenGL fragment shader cannot be created.": "error_opengl_fragment_shader_creation",
    "The OpenGL fragment shader": "error_the_opengl_fragment_shader",
    "The program": "error_the_program",
    "cannot be linked": "error_link",
    "Cannot initialize GLFW.": "error_glfw_init",
    "Cannot create GLFW window.": "error_glfw_window_creation",
    "Cannot initialize GLAD.": "error_glad_init",
    "Cannot open file.": "error_file_open",
    "Unsupported color components.": "error_unsupported_color_components",
    "The OpenGL texture cannot be created.": "error_opengl_texture_creation",
    "The OpenGL frame buffer cannot be created.": "error_opengl_frame_buffer_creation",
    "The OpenGL frame buffer cannot be initialized.": "error_opengl_frame_buffer_init",
    "The file cannot be opened.": "error_file_open",
    "Bad magic number.": "error_bad_magic_number",
    "Unsupported image type.": "error_unsupported_image_type",
    "Incomplete file.": "error_incomplete_file",
    "No image channels.": "error_no_image_channels",
    "Image channels must have the same size and bit depth.": "error_image_channels_same_size_and_bit_depth",
    "Unsupported bit depth.": "error_unsupported_bit_depth",
    "Line padding is unsupported.": "error_line_padding_unsupported",
    "Channel padding is unsupported.": "error_channel_padding_unsupported",
    "Unsupported file.": "error_unsupported_file",
    "Read error.": "error_read",
    "Error reading scanline.": "error_read_scanline",
    "Error writing scanline.": "error_write_scanline",
    "The shader cannot be created": "error_the_shader_creation",

    "U8": "u8",
    "S16": "s16",
    "S32": "s32",
    "F32": "f32",
    "F64": "f64",

    "Left": "direction_left",
    "Top": "direction_top",
    "Right": "direction_right",
    "Bottom": "direction_bottom",

    "Timecode": "unit_time_timecode",
    "Frames": "unit_time_frames",

    "Straight": "alpha_straight",
    "Premultiplied": "alpha_premultiplied",

    "This plugin provides IFF image I/O.": "plugin_iff_io",
    "This plugin provides Joint Photographic Experts Group (JPEG) image I/O.": "plugin_jpeg_io",
    "This plugin provides OpenEXR file I/O.": "plugin_openexr_io",
    "This plugin provides RLA image I/O.": "plugin_rla_io",
    "This plugin provides Portable Network Graphics (PNG) image I/O.": "plugin_png_i_o",
    "This plugin provides NetPBM image I/O.": "plugin_netpbm_io",
    "This plugin provides Cineon image I/O.": "plugin_cineon_io",
    "This plugin provides DPX image I/O.": "plugin_dpx_io",
    "This plugin provides SGI image I/O.": "plugin_sgi_io",
    "This plugin provides Tagged Image File Format (TIFF) image I/O.": "plugin_tiff_io",
    "This plugin provides Targa image I/O.": "plugin_targa_io",
    "This plugin provides FFmpeg image and audio I/O.": "plugin_ffmpeg_io",

    "None": "format_exr_channel_grouping_none",
    "Known": "format_exr_channel_grouping_known",
    "All": "format_exr_channel_grouping_all",

    "RLE": "format_exr_compression_rle",
    "ZIPS": "format_exr_compression_zips",
    "ZIP": "format_exr_compression_zip",
    "PIZ": "format_exr_compression_piz",
    "PXR24": "format_exr_compression_pxr24",
    "B44": "format_exr_compression_b44",
    "B44A": "format_exr_compression_b44a",
    "DWAA": "format_exr_compression_dwaa",
    "DWAB": "format_exr_compression_dwab",
    "RLE": "format_tiff_compression_rle",
    "LZW": "format_tiff_compression_lzw",

    "ASCII": "format_ppm_type_ascii",
    "Binary": "format_ppm_type_binary",

    "L_U8": "channel_type_l_u8",
    "L_U16": "channel_type_l_u16",
    "L_U32": "channel_type_l_u32",
    "L_F16": "channel_type_l_f16",
    "L_F32": "channel_type_l_f32",
    "LA_U8": "channel_type_la_u8",
    "LA_U16": "channel_type_la_u16",
    "LA_U32": "channel_type_la_u32",
    "LA_F16": "channel_type_la_f16",
    "LA_F32": "channel_type_la_f32",
    "RGB_U8": "channel_type_rgb_u8",
    "RGB_U10": "channel_type_rgb_u10",
    "RGB_U16": "channel_type_rgb_u16",
    "RGB_U32": "channel_type_rgb_u32",
    "RGB_F16": "channel_type_rgb_f16",
    "RGB_F32": "channel_type_rgb_f32",
    "RGBA_U8": "channel_type_rgba_u8",
    "RGBA_U16": "channel_type_rgba_u16",
    "RGBA_U32": "channel_type_rgba_u32",
    "RGBA_F16": "channel_type_rgba_f16",
    "RGBA_F32": "channel_type_rgba_f32",
    "L": "channel_type_l",
    "LA": "channel_type_la",
    "RGB": "channel_type_rgb",
    "RGBA": "channel_type_rgba",
    "U10": "channel_type_u10",
    "U16": "channel_type_u16",
    "U32": "channel_type_u32",
    "F16": "channel_type_f16",

    "1.0": "1_0",
    "2.0": "2_0",
    "Auto": "auto",
    "MSB": "msb",
    "LSB": "lsb",

    "Red": "channel_red",
    "Green": "channel_green",
    "Blue": "channel_blue",
    "Alpha": "channel_alpha",

    "Atlas": "atlas",
    "Dynamic": "dynamic",

    "Nearest": "filter_nearest",
    "Linear": "filter_linear",

    "Float": "type_float",
    "Double": "type_double",
    "S16 Planar": "type_s16_planar",
    "S32 Planar": "type_s32_planar",
    "Float Planar": "type_float_planar",
    "Double Planar": "type_double_planar"
}
